{"version":3,"file":"jquery-simpletag.min.js","sources":["../src/js/jquery.simpletag.js"],"names":["$","SimpleTag","fn","simpletag","opts","this","each","$input","init","prototype","default_opts","border_spacing","delimiter","input_min_width","tags","$original_input","$container","$list","extend","create_container","create_list","create_input","before","append","bind_events","read_tags","update_view","clonecss","css","minHeight","outerHeight","lineHeight","width","marginTop","val","parseInt","self","$tag","find","remove","clone","html","add_tag","tag","trim","tag_exists","push","write_tags","remove_tag","index","inArray","splice","map","split","join","$mirror","resize_input","display","position","top","left","padding","margin","prepend","innerWidth","replace","on","e","preventDefault","keyCode","substr","length","trigger","$src","props","$dest","jQuery"],"mappings":"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","sourcesContent":["/*\n * jquery-simpletag\n * https://github.com/derapU/jquery-simpletag\n *\n * Copyright (c) 2015 Andreas Berghaus\n * Licensed under the MIT license.\n */\n\n( function( $ ) {\n\t\"use strict\";\n\n\tvar SimpleTag,\n\t\tdefault_opts;\n\n\t$.fn.simpletag = function ( opts ) {\n\t\treturn this.each( function () {\n\t\t\tthis.simpletag = new SimpleTag( $( this ), opts );\n\t\t} );\n\t};\n\n\tSimpleTag = function ( $input, opts ) {\n\t\tthis.init( $input, opts );\n\t};\n\tSimpleTag.prototype = {\n\t\tdefault_opts: {\n\t\t\tborder_spacing: null,\n\t\t\tdelimiter: ',',\n\t\t\tinput_min_width: 30 // in px\n\t\t},\n\t\topts: null,\n\n\t\ttags: [],\n\n\t\t$original_input: null,\n\t\t$input:          null,\n\t\t$container:      null,\n\t\t$list:           null,\n\n\t\tinit: function ( $input, opts ) {\n\t\t\t// configure and save the original field\n\t\t\tthis.opts            = $.extend( {}, this.default_opts, opts );\n\t\t\tthis.$original_input = $input;\n\n\t\t\t// create elements\n\t\t\tthis.create_container();\n\t\t\tthis.create_list();\n\n\t\t\t// clone original-input and append it to the list\n\t\t\tthis.create_input();\n\n\t\t\t// insert container and put original input inside\n\t\t\t// then append our taglist\n\t\t\tthis.$original_input.before( this.$container );\n\t\t\tthis.$container\n\t\t\t\t.append( this.$original_input )\n\t\t\t\t.append( this.$list );\n\n\n\t\t\t// append the input field\n\t\t\tthis.$list.append( this.$input );\n\n\t\t\t// bind events\n\t\t\tthis.bind_events();\n\n\t\t\t// update taglist with values from original input\n\t\t\tthis.tags = this.read_tags();\n\t\t\tthis.update_view();\n\t\t},\n\n\t\tcreate_container: function () {\n\t\t\tthis.$container = $( '<div class=\"simpletag-container\">' );\n\n\t\t\t// clone some css-properties\n\t\t\tthis.$container.clonecss( this.$original_input, [\n\t\t\t\t'background-color',\n\t\t\t\t'color',\n\t\t\t\t'border-style',\n\t\t\t\t'border-color',\n\t\t\t\t'border-width',\n\t\t\t\t'float',\n\t\t\t\t'font-family',\n\t\t\t\t'font-size',\n\t\t\t\t'font-style',\n\t\t\t\t'font-weight',\n\t\t\t\t'text-transform',\n\t\t\t\t'text-decoration',\n\t\t\t\t'width'\n\t\t\t] ).css ( {\n\t\t\t\tminHeight:  this.$original_input.outerHeight(),\n\t\t\t\tlineHeight: '1em'\n\t\t\t} );\n\t\t},\n\t\tcreate_input: function () {\n\t\t\tthis.$input = $( '<input type=\"text\" class=\"simpletag-input\">' )\n\t\t\t\t.css( {\n\t\t\t\t\twidth: this.opts.input_min_width,\n\t\t\t\t\tmarginTop: this.opts.border_spacing\n\t\t\t\t} )\n\t\t\t\t.val( '' );\n\t\t},\n\t\tcreate_list: function () {\n\t\t\tthis.$list = $( '<div class=\"simpletag-list\">' ).clonecss( this.$original_input, [\n\t\t\t\t'padding-right',\n\t\t\t\t'padding-bottom',\n\t\t\t\t'padding-left'\n\t\t\t] );\n\t\t\tif ( null === this.opts.border_spacing ) {\n\t\t\t\tthis.opts.border_spacing = parseInt( this.$original_input.css( 'padding-top' ), 10 );\n\t\t\t}\n\t\t},\n\n\t\tupdate_view: function ( field_value ) {\n\t\t\tvar self = this,\n\t\t\t\t$tag = $( '<span class=\"simpletag-tag\">' );\n\n\t\t\t// add correct border-spacing\n\t\t\t$tag.css( {\n\t\t\t\tmarginTop: this.opts.border_spacing + 'px',\n\t\t\t} );\n\n\t\t\t// remove tags\n\t\t\tthis.$list.find( '.simpletag-tag' ).remove();\n\n\t\t\t// insert tags in list\n\t\t\t$.each( this.tags, function () {\n\t\t\t\tself.$input.before( $tag.clone().html( this ) );\n\t\t\t} );\n\t\t},\n\n\n\t\t// add or remove tag to / from tag-box\n\t\tadd_tag: function ( tag ) {\n\t\t\ttag = this.trim( tag );\n\n\t\t\t// drop empty tag\n\t\t\tif ( '' === tag ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// drop double-tag\n\t\t\tif ( true === this.tag_exists( tag ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// add to original input\n\t\t\tthis.tags.push( tag );\n\t\t\tthis.write_tags();\n\n\t\t\t// add to view\n\t\t\tthis.update_view();\n\t\t},\n\t\tremove_tag: function ( tag ) {\n\t\t\tvar index = $.inArray( tag, this.tags );\n\n\t\t\t// remove original input\n\t\t\tif ( -1 < index ) {\n\t\t\t\tthis.tags.splice( index, 1 );\n\t\t\t\tthis.write_tags();\n\t\t\t}\n\n\t\t\t// update view\n\t\t\tthis.update_view();\n\t\t},\n\t\ttag_exists: function ( tag ) {\n\t\t\treturn ! -1 < $.inArray( tag, this.tags );\n\t\t},\n\n\n\t\t// read and write tags from / to original input-field\n\t\tread_tags: function () {\n\t\t\tvar self = this;\n\t\t\treturn $.map( this.$original_input.val().split( this.opts.delimiter ), function ( tag ) {\n\t\t\t\treturn self.trim( tag );\n\t\t\t} );\n\t\t},\n\t\twrite_tags: function () {\n\t\t\tthis.$original_input.val( this.tags.join( this.opts.delimiter ) );\n\t\t},\n\n\n\t\t// resize the input-field to match the contents length\n\t\t$mirror: null,\n\t\tresize_input: function () {\n\t\t\tvar self    = this,\n\t\t\t\t$mirror = this.$mirror;\n\n\t\t\tif ( null === $mirror ) {\n\t\t\t\t$mirror = $( '<span>' );\n\t\t\t\t$mirror.css( {\n\t\t\t\t\tdisplay:  'block',\n\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\ttop:      '-100000px',\n\t\t\t\t\tleft:     '-100000px',\n\t\t\t\t\tpadding:  0,\n\t\t\t\t\tmargin:   0,\n\t\t\t\t\twidth:    'auto'\n\t\t\t\t} );\n\n\t\t\t\t// clone font-properties from inputfield\n\t\t\t\t$mirror.clonecss( self.$input, [\n\t\t\t\t\t'font-family',\n\t\t\t\t\t'font-size',\n\t\t\t\t\t'font-style',\n\t\t\t\t\t'font-weight',\n\t\t\t\t\t'letter-spacing',\n\t\t\t\t\t'line-height',\n\t\t\t\t\t'text-transform',\n\t\t\t\t\t'text-indent',\n\t\t\t\t\t'whitespace',\n\t\t\t\t\t'word-spacing'\n\t\t\t\t] );\n\n\t\t\t\t// save the mirror\n\t\t\t\t$( 'body' ).prepend( $mirror );\n\t\t\t\tthis.$mirror = $mirror;\n\t\t\t}\n\n\t\t\t// set current input-value, get the rendered width and apply\n\t\t\t// it to the input including the configured min-width to save some\n\t\t\t// place for the next character.\n\t\t\t$mirror.html( self.$input.val() );\n\t\t\tself.$input.width( parseInt( $mirror.innerWidth(), 10 )+self.opts.input_min_width + 'px' );\n\t\t},\n\n\n\t\ttrim: function ( val ) {\n\t\t\treturn val.replace( /^\\s*|\\s*$/g, '' );\n\t\t},\n\n\t\tbind_events: function () {\n\t\t\tvar self = this;\n\n\t\t\t// remove tag on click\n\t\t\tthis.$list.on( 'click', '> .simpletag-tag', function ( e ) {\n\t\t\t\te.preventDefault();\n\t\t\t\tself.remove_tag( $( this ).html() );\n\t\t\t} );\n\n\t\t\t// autoresize inputfield and check if we have to add a tag\n\t\t\tthis.$input.on( 'keyup', function ( e ) {\n\t\t\t\t// add tag\n\t\t\t\tif ( 13 === e.keyCode || self.opts.delimiter === self.$input.val().substr( -1 ) ) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tself.add_tag( self.$input.val().replace( /,$/i, '', self.$input.val() ) );\n\t\t\t\t\tself.$input.val( '' );\n\t\t\t\t}\n\n\t\t\t\tself.resize_input();\n\t\t\t} ).on( 'keydown', function ( e ) {\n\t\t\t\t// remove tag\n\t\t\t\tif ( 8 === e.keyCode && 0 === self.$input.val().length ) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tself.remove_tag( self.tags[self.tags.length-1] );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// focus input on container-click\n\t\t\tthis.$container.on( 'click', function ( e ) {\n\t\t\t\te.preventDefault();\n\t\t\t\tself.$input.trigger( 'focus' );\n\t\t\t} );\n\t\t}\n\t};\n\n\t// little helper to clone css-properties\n\t$.fn.clonecss = function ( $src, props ) {\n\t\treturn $.each( this, function () {\n\t\t\tvar $dest = $( this );\n\t\t\treturn $.each( props, function () {\n\t\t\t\treturn $dest.css( this, $src.css( this ) );\n\t\t\t} );\n\t\t} );\n\t};\n} ( jQuery ) );\n"]}