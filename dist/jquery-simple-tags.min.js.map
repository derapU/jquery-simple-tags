{"version":3,"file":"jquery-simple-tags.min.js","sources":["../src/js/jquery.simple-tags.js"],"names":["$","SimpleTags","fn","simple_tags","opts","this","each","undefined","_revert","$input","_init","prototype","_default_opts","min_length","delimiter","border_spacing","input_min_width","events","change","tags","_opts","_tags","_$original_input","_$input","_$container","_$list","extend","_createContainer","_createList","_createInput","before","append","_bindEvents","_readTags","updateView","clone","attr","after","val","css","position","zIndex","width","clonecss","marginBottom","minHeight","outerHeight","lineHeight","parseInt","self","$tag","marginTop","find","remove","html","_addTag","tag","_trim","length","_tag_exists","_remove_tag","push","_writeTags","index","inArray","splice","map","split","join","apply","replace","replaceWith","get","on","e","preventDefault","keyCode","substr","trigger","$src","props","$dest","jQuery"],"mappings":"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","sourcesContent":["/*\n * jquery-simple-tags\n * https://github.com/derapU/jquery-simple-tags\n *\n * Copyright (c) 2015 Andreas Berghaus\n * Licensed under the MIT license.\n */\n\n( function ( $ ) {\n\t\"use strict\";\n\n\tvar SimpleTags;\n\n\t$.fn.simple_tags = function ( opts ) {\n\t\treturn this.each( function () {\n\t\t\tif ( undefined !== this.simple_tags ) {\n\t\t\t\tthis.simple_tags._revert();\n\t\t\t}\n\t\t\tif ( undefined === this.simple_tags ) {\n\t\t\t\treturn this.simple_tags = new SimpleTags( $( this ), opts );\n\t\t\t}\n\t\t} );\n\t};\n\n\tSimpleTags = function ( $input, opts ) {\n\t\tthis._init( $input, opts );\n\t\treturn this;\n\t};\n\tSimpleTags.prototype = {\n\t\t_default_opts: {\n\t\t\tmin_length: 3,\n\t\t\tdelimiter: ',',\n\t\t\tborder_spacing:  null, // null | px\n\t\t\tinput_min_width: 30,   // in px\n\t\t\tevents: {\n\t\t\t\tchange: function ( tags ) { return tags; }\n\t\t\t}\n\t\t},\n\t\t_opts: null,\n\n\t\t_tags: [],\n\n\t\t_$original_input: null,\n\t\t_$input:          null,\n\t\t_$container:      null,\n\t\t_$list:           null,\n\n\t\t_init: function ( $input, opts ) {\n\t\t\t// configure and save the original field\n\t\t\tthis._opts            = $.extend( true, {}, this._default_opts, opts );\n\t\t\tthis._$original_input = $input;\n\n\t\t\t// create elements\n\t\t\tthis._createContainer();\n\t\t\tthis._createList();\n\t\t\tthis._createInput();\n\n\t\t\t// insert container\n\t\t\tthis._$input.before( this._$container );\n\t\t\tthis._$container.append( this._$list );\n\n\t\t\t// bind events\n\t\t\tthis._bindEvents();\n\n\t\t\t// update taglist with values from original input\n\t\t\tthis._tags = this._readTags();\n\t\t\tthis.updateView();\n\t\t},\n\n\t\t_createInput: function () {\n\t\t\t// create new input-field\n\t\t\tthis._$input = this._$original_input.clone().attr( 'id', '' ).attr( 'name', '' );\n\n\t\t\t// append new input-field\n\t\t\tthis._$original_input.after( this._$input.attr( 'placeholder', 'Tags hinzuf√ºgen' ).val( '' ) );\n\n\t\t\t// hide original-input\n\t\t\tthis._$original_input.css( {\n\t\t\t\tposition: 'absolute',\n\t\t\t\tzIndex: -1,\n\t\t\t\twidth: 0\n\t\t\t} );\n\t\t},\n\n\t\t_createContainer: function () {\n\t\t\tthis._$container = $( '<div class=\"simple-tags-container\">' );\n\n\t\t\t// clone some css-properties\n\t\t\tthis._$container.clonecss( this._$original_input, [\n\t\t\t\t'font-family',\n\t\t\t\t'font-size',\n\t\t\t\t'font-style',\n\t\t\t\t'font-weight',\n\t\t\t\t'margin-top',\n\t\t\t\t'margin-left',\n\t\t\t\t'margin-right',\n\t\t\t\t'text-transform',\n\t\t\t\t'text-decoration',\n\t\t\t\t'width'\n\t\t\t] ).css ( {\n\t\t\t\tmarginBottom: this._opts.border_spacing,\n\t\t\t\tminHeight:  this._$original_input.outerHeight(),\n\t\t\t\tlineHeight: '1em'\n\t\t\t} );\n\t\t},\n\t\t_createList: function () {\n\t\t\tif ( null === this._opts.border_spacing ) {\n\t\t\t\tthis._opts.border_spacing = parseInt( this._$original_input.css( 'padding-top' ), 10 );\n\t\t\t}\n\t\t\tthis._$list = $( '<div class=\"simple-tags-list\">' );\n\t\t\tthis._$list.css( 'padding-bottom', 0.5*this._opts.border_spacing + 'px' );\n\t\t},\n\n\t\tupdateView: function () {\n\t\t\tvar self = this,\n\t\t\t\t$tag = $( '<span class=\"simple-tags-tag\">' );\n\n\t\t\tthis._tags = this._readTags();\n\n\t\t\t// add correct border-spacing\n\t\t\t$tag.css( {\n\t\t\t\tmarginTop: this._opts.border_spacing + 'px',\n\t\t\t} );\n\n\t\t\t// remove tags\n\t\t\tthis._$list.find( ':not(input).simple-tags-tag' ).remove();\n\n\t\t\t// insert tags in list\n\t\t\t$.each( this._tags, function () {\n\t\t\t\tself._$list.append( $tag.clone().html( this ) );\n\t\t\t} );\n\t\t},\n\n\n\t\t// add or remove tag to / from tag-box\n\t\t_addTag: function ( tag ) {\n\t\t\ttag = this._trim( tag );\n\n\t\t\t// drop empty tag\n\t\t\tif ( '' === tag ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// drop short tags\n\t\t\tif ( this._opts.min_length > tag.length ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// remove duplicate-tag and append it to the end\n\t\t\tif ( true === this._tag_exists( tag ) ) {\n\t\t\t\tthis._remove_tag( tag );\n\t\t\t}\n\n\t\t\t// add to original input\n\t\t\tthis._tags.push( tag );\n\t\t\tthis._writeTags();\n\n\t\t\t// add to view\n\t\t\tthis.updateView();\n\t\t},\n\t\t_remove_tag: function ( tag ) {\n\t\t\tvar index = $.inArray( tag, this._tags );\n\n\t\t\t// remove original input\n\t\t\tif ( -1 < index ) {\n\t\t\t\tthis._tags.splice( index, 1 );\n\t\t\t\tthis._writeTags();\n\t\t\t}\n\n\t\t\t// update view\n\t\t\tthis.updateView();\n\t\t},\n\t\t_tag_exists: function ( tag ) {\n\t\t\treturn true === -1 < $.inArray( tag, this._tags );\n\t\t},\n\n\n\t\t// read and write tags from / to original input-field\n\t\t_readTags: function () {\n\t\t\tvar self = this;\n\t\t\treturn $.map( this._$original_input.val().split( this._opts.delimiter ), function ( tag ) {\n\t\t\t\treturn self._trim( tag ) || null;\n\t\t\t} );\n\t\t},\n\t\t_writeTags: function () {\n\t\t\tthis._$original_input.val( this._tags.join( this._opts.delimiter ) );\n\t\t\tthis._opts.events.change.apply( this, [this._tags] );\n\t\t},\n\n\t\t_trim: function ( val ) {\n\t\t\treturn val.replace( /^\\s*|\\s*$/g, '' );\n\t\t},\n\t\t_revert: function () {\n\t\t\tthis._$container.replaceWith( this._$original_input );\n\t\t\tthis._$original_input.get( 0 ).simple_tags = undefined;\n\n\t\t\tthis._$input.remove();\n\n\t\t\t// remove styles from original-input\n\t\t\tthis._$original_input.css( {\n\t\t\t\tposition: '',\n\t\t\t\tzIndex: '',\n\t\t\t\twidth: ''\n\t\t\t} );\n\t\t},\n\n\t\t_bindEvents: function () {\n\t\t\tvar self = this;\n\n\t\t\t// remove tag on click\n\t\t\tthis._$list.on( 'click', '> .simple-tags-tag', function ( e ) {\n\t\t\t\te.preventDefault();\n\t\t\t\tself._remove_tag( $( this ).html() );\n\t\t\t} );\n\n\t\t\t// autoresize inputfield and check if we have to add a tag\n\t\t\tthis._$input.on( 'keyup', function ( e ) {\n\t\t\t\t// add tag\n\t\t\t\tif ( 13 === e.keyCode || self._opts.delimiter === self._$input.val().substr( -1 ) ) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tif ( false !== self._addTag( self._$input.val().replace( /,$/i, '', self._$input.val() ) ) ) {\n\t\t\t\t\t\tself._$input.val( '' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// focus input on container-click\n\t\t\tthis._$container.on( 'click', function ( e ) {\n\t\t\t\te.preventDefault();\n\t\t\t\tself._$input.trigger( 'focus' );\n\t\t\t} );\n\t\t}\n\t};\n\n\t// little helper to clone css-properties\n\t$.fn.clonecss = function ( $src, props ) {\n\t\treturn $.each( this, function () {\n\t\t\tvar $dest = $( this );\n\t\t\treturn $.each( props, function () {\n\t\t\t\treturn $dest.css( this, $src.css( this ) );\n\t\t\t} );\n\t\t} );\n\t};\n} ( jQuery ) );\n"]}